{"version":3,"file":"static/js/460.edc6febb.chunk.js","mappings":"gMAAaA,EAAoB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAM,EAElDC,EAAgB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,OAAQ,E,kBCChDC,EAAU,SAAHC,GAAmB,IAAdC,EAAOD,EAAPC,QACjBC,GAAWC,EAAAA,EAAAA,MAMjB,OACEC,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CACGJ,EAAQK,KAAK,KAAGL,EAAQM,WAE3BC,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASC,QATF,WACtBR,GAASS,EAAAA,EAAAA,IAAcV,EAAQW,IACjC,EAOmDP,SAAC,aAKtD,EChBaQ,EAAc,WAEzB,IAAMlB,GAAWmB,EAAAA,EAAAA,IAAYrB,GAE7B,OACEe,EAAAA,EAAAA,KAAA,MAAAH,SACGV,EAASoB,KAAI,SAAAd,GAAO,OACnBO,EAAAA,EAAAA,KAACT,EAAO,CAAkBE,QAASA,GAArBA,EAAQW,GAAwB,KAItD,E,SCXaI,EAAc,WACzB,IAAMrB,GAAWmB,EAAAA,EAAAA,IAAYrB,GACvBS,GAAWC,EAAAA,EAAAA,MAuBjB,OACEC,EAAAA,EAAAA,MAAA,QAAMa,SAtBa,SAAAC,GACnBA,EAAMC,iBAEN,IAAMC,EAAOF,EAAMG,OACbC,EAAWF,EAAKG,SAASjB,KAAKkB,MAC9BC,EAAYL,EAAKG,SAAShB,OAAOiB,MAEvC,OAAI7B,EAAS+B,MAAK,SAAA1B,GAAO,OAAAA,EAAJM,OAAoBgB,CAAQ,KAC/CK,QAAQC,IAAI,YACLR,EAAKS,SAGVlC,EAAS+B,MAAK,SAAAI,GAAS,OAAAA,EAANvB,SAAwBkB,CAAS,KACpDE,QAAQC,IAAI,aACLR,EAAKS,UAEd3B,GAAS6B,EAAAA,EAAAA,IAAW,CAACzB,KAAMgB,EAAUf,OAAQkB,UAC7CL,EAAKS,QACP,EAI+BxB,SAAA,EAC3BD,EAAAA,EAAAA,MAAA,SAAO4B,QAAQ,OAAM3B,SAAA,CAAC,QAEpBG,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOH,KAAK,OAAOkB,MAAO7B,EAASW,KAAM2B,UAAQ,QAE/D7B,EAAAA,EAAAA,MAAA,SAAO4B,QAAQ,OAAM3B,SAAA,CAAC,UAEpBG,EAAAA,EAAAA,KAAA,SAAOC,KAAK,MAAMH,KAAK,SAASkB,MAAO7B,EAASY,OAAQ0B,UAAQ,QAElEzB,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQJ,SAAC,kBAG5B,ECnCe,SAAS6B,IACtB,IAAMhC,GAAWC,EAAAA,EAAAA,MACXgC,GAAYrB,EAAAA,EAAAA,IAAYjB,GAK9B,OAHAuC,EAAAA,EAAAA,YAAU,WACRlC,GAASmC,EAAAA,EAAAA,MACX,GAAG,CAACnC,KAEFE,EAAAA,EAAAA,MAAAkC,EAAAA,SAAA,CAAAjC,SAAA,EACEG,EAAAA,EAAAA,KAAA,OAAAH,SAAM8B,GAAa,4BACnB3B,EAAAA,EAAAA,KAACQ,EAAW,KACZR,EAAAA,EAAAA,KAACK,EAAW,MAGlB,C","sources":["redux/contacts/selectors.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","pages/Contacts.js"],"sourcesContent":["export const selectAllContacts = state => state.contacts.items;\n\nexport const selectLoading = state => state.contacts.loading;","import { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"../../redux/contacts/operations\";\n\nexport const Contact = ({contact}) => {\n  const dispatch = useDispatch();\n\n  const onDeleteContact = () => {\n    dispatch(deleteContact(contact.id));\n  };\n\n  return (\n    <li>\n      <p>\n        {contact.name}: {contact.number}\n      </p>\n      <button type=\"button\" onClick={onDeleteContact}>\n        Delete\n      </button>\n    </li>\n  );\n};","import { useSelector } from \"react-redux\";\nimport { selectAllContacts } from \"../../redux/contacts/selectors\";\nimport { Contact } from \"components/Contact/Contact\";\n\nexport const ContactList = () => {\n \n  const contacts = useSelector(selectAllContacts);\n  \n  return (\n    <ul>\n      {contacts.map(contact => (\n        <Contact key={contact.id} contact={contact} />\n      ))}\n    </ul>\n  );\n};","import { useDispatch, useSelector } from \"react-redux\"\nimport { addContact } from \"../../redux/contacts/operations\";\nimport { selectAllContacts } from \"../../redux/contacts/selectors\";\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectAllContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.target;\n    const formName = form.elements.name.value;\n    const formPhone = form.elements.number.value;\n   \n    if (contacts.some(({ name }) => name === formName)) {\n      console.log(\"not name\");\n      return form.reset();\n    }\n\n    if (contacts.some(({ number }) => number === formPhone)) {\n      console.log(\"not phone\");\n      return form.reset();\n    }\n    dispatch(addContact({name: formName, number: formPhone}));\n    form.reset();\n  };\n\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"name\">\n        Name\n        <input type=\"text\" name=\"name\" value={contacts.name} required/>\n      </label>\n      <label htmlFor=\"name\">\n      Number\n        <input type=\"tel\" name=\"number\" value={contacts.number} required/>\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  )\n}","import { ContactList } from \"components/ContactList/ContactList\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectLoading } from \"../redux/contacts/selectors\";\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"../redux/contacts/operations\";\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactForm />\n      <ContactList />\n    </>\n  );\n}"],"names":["selectAllContacts","state","contacts","items","selectLoading","loading","Contact","_ref","contact","dispatch","useDispatch","_jsxs","children","name","number","_jsx","type","onClick","deleteContact","id","ContactList","useSelector","map","ContactForm","onSubmit","event","preventDefault","form","target","formName","elements","value","formPhone","some","console","log","reset","_ref2","addContact","htmlFor","required","Contacts","isLoading","useEffect","fetchContacts","_Fragment"],"sourceRoot":""}