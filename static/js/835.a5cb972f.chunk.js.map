{"version":3,"file":"static/js/835.a5cb972f.chunk.js","mappings":"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","sources":["components/Contact/Contact.js","redux/contacts/selectors.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"../../redux/contacts/operations\";\n\nexport const Contact = ({contact}) => {\n  const dispatch = useDispatch();\n\n  const onDeleteContact = () => {\n    dispatch(deleteContact(contact.id));\n  };\n\n  return (\n    <li>\n      <p>\n        {contact.name}: {contact.number}\n      </p>\n      <button type=\"button\" onClick={onDeleteContact}>\n        Delete\n      </button>\n    </li>\n  );\n};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectAllContacts = state => state.contacts.items;\n\nexport const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.filters;\n\nexport const selectVisibleContacts = createSelector(\n  [selectAllContacts, selectFilter],\n  (contacts, filter) => {\n    return (contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter)\n    ));\n  }\n);\n","import { useSelector } from 'react-redux';\nimport { Contact } from 'components/Contact/Contact';\nimport {  selectVisibleContacts } from '../../redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  \n  return (\n    <ul>\n      {contacts.map(contact => (\n        <Contact key={contact.id} contact={contact} />\n      ))}\n    </ul>\n  );\n};\n","import { useDispatch, useSelector } from \"react-redux\"\nimport { addContact } from \"../../redux/contacts/operations\";\nimport { selectAllContacts } from \"../../redux/contacts/selectors\";\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectAllContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.target;\n    const formName = form.elements.name.value;\n    const formPhone = form.elements.number.value;\n   \n    if (contacts.some(({ name }) => name === formName)) {\n      console.log(\"not name\");\n      return form.reset();\n    }\n\n    if (contacts.some(({ number }) => number === formPhone)) {\n      console.log(\"not phone\");\n      return form.reset();\n    }\n    dispatch(addContact({name: formName, number: formPhone}));\n    form.reset();\n  };\n\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"name\">\n        Name\n        <input type=\"text\" name=\"name\" value={contacts.name} required/>\n      </label>\n      <label htmlFor=\"name\">\n      Number\n        <input type=\"tel\" name=\"number\" value={contacts.number} required/>\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  )\n}","import { useDispatch, useSelector} from \"react-redux\";\nimport { selectFilter } from \"../../redux/contacts/selectors\";\nimport { setFilter } from \"../../redux/contacts/filtersSlice\";\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = event => {\n    const normalizedFilter = event.target.value.toLowerCase().trim();\n    dispatch(setFilter(normalizedFilter));\n  };\n  return (\n    <label >\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter contact name\"\n        value={filter}\n        onChange={handleFilter}\n      />\n    </label>\n  );\n};","import { ContactList } from \"components/ContactList/ContactList\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectLoading } from \"../redux/contacts/selectors\";\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"../redux/contacts/operations\";\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { Filter } from \"components/Filter/Filter\";\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  \n  return (\n    <>\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n}"],"names":["Contact","_ref","contact","dispatch","useDispatch","_jsxs","children","name","number","_jsx","type","onClick","deleteContact","id","selectAllContacts","state","contacts","items","selectLoading","loading","selectFilter","filters","selectVisibleContacts","createSelector","filter","toLowerCase","includes","ContactList","useSelector","map","ContactForm","onSubmit","event","preventDefault","form","target","formName","elements","value","formPhone","some","console","log","reset","_ref2","addContact","htmlFor","required","Filter","placeholder","onChange","normalizedFilter","trim","setFilter","Contacts","isLoading","useEffect","fetchContacts","_Fragment"],"sourceRoot":""}